<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd">

    <task type="function" name="h_importdata" category="pipeline">
        <shortdescription>Imports data into the interferometry pipeline</shortdescription>
        <description>
        </description>
        <input>
            <param type="stringArray" name="vis">
                <description>List of input visibility data</description>
                <value></value>
            </param>

            <param type="stringArray" name="session">
                <description>List of visibility data sessions</description>
                <value></value>
            </param>

            <param type="string" name="pipelinemode">
                <description>The pipeline operating mode</description>
                <value>automatic</value>
                <allowed kind="enum">
                    <value>automatic</value>
                    <value>interactive</value>
                    <value>getinputs</value>
                </allowed>
            </param>

            <param type="string" name="asis" subparam="true">
                <description>Extra ASDM tables to convert as is</description>
                <value></value>
            </param>

            <param type="bool" name="process_caldevice" subparam="true">
                <description>Import the caldevice table from the ASDM</description>
                <value>False</value>
            </param>

            <param type="bool" name="overwrite" subparam="true">
                <description>Overwrite existing files on import</description>
                <value>False</value>
            </param>

            <param type="bool" name="nocopy" subparam="true">
                <description>Disable copying of MS to working directory</description>
                <value>False</value>
            </param>

            <param type="bool" name="bdfflags" subparam="true">
                <description>Apply BDF flags on import</description>
                <value>True</value>
            </param>

            <param type="bool" name="lazy">
                <description>Use the lazy import option</description>
                <value>False</value>
            </param>

            <param type="string" name="ocorr_mode" subparam="true">
                <description>ALMA default set to ca</description>
                <value>ca</value>
            </param>

            <param type="string" name="createmms">
                <description>Create an MMS</description>
                <value>automatic</value>
                <allowed kind="enum">
                    <value>automatic</value>
                    <value>true</value>
                    <value>false</value>
                </allowed>
            </param>

            <param type="bool" name="dryrun" subparam="true">
                <description>Run the task (False) or display task command (True)</description>
                <value>False</value>
            </param>

            <param type="bool" name="acceptresults" subparam="true">
                <description>Add the results into the pipeline context</description>
                <value>True</value>
            </param>

            <constraints>
                <when param="pipelinemode">
                    <equals type="string" value="automatic">
                    </equals>
                    <equals type="string" value="interactive">
                        <default param="asis">
                            <value type="string"></value>
                        </default>
                        <default param="ocorr_mode">
                            <value type="string">ca</value>
                        </default>
                        <default param="process_caldevice">
                            <value type="bool">False</value>
                        </default>
                        <default param="overwrite">
                            <value type="bool">False</value>
                        </default>
                        <default param="nocopy">
                            <value type="bool">False</value>
                        </default>
                        <default param="bdfflags">
                            <value type="bool">True</value>
                        </default>
                        <default param="dryrun">
                            <value type="bool">False</value>
                        </default>
                        <default param="acceptresults">
                            <value type="bool">True</value>
                        </default>
                    </equals>
                    <equals type="string" value="getinputs">
                        <default param="asis">
                            <value type="string"></value>
                        </default>
                        <default param="ocorr_mode">
                            <value type="string">ca</value>
                        </default>
                        <default param="process_caldevice">
                            <value type="bool">False</value>
                        </default>
                        <default param="overwrite">
                            <value type="bool">False</value>
                        </default>
                        <default param="nocopy">
                            <value type="bool">False</value>
                        </default>
                        <default param="bdfflags">
                            <value type="bool">True</value>
                        </default>
                    </equals>
                </when>
            </constraints>

        </input>

        <output>
            <param type="any" name="results">
                <description>The output results object</description>
                <any type="variant"/>
                <value></value>
            </param>
        </output>
        <returns type="void"/>


        <example>
The h_importdata task loads the specified visibility data into the pipeline
context unpacking and / or converting it as necessary.

Keyword arguments:

---- pipeline parameter arguments which can be set in any pipeline mode

vis -- List of visibility data files. These may be ASDMs, tar files of ASDMs,
    MSs, or tar files of MSs, If ASDM files are specified, they will be
    converted to MS format.
    default: []
    example: vis=['X227.ms', 'asdms.tar.gz']

session -- List of sessions to which the visibility files belong. Defaults
    to a single session containing all the visibility files, otherwise
    a session must be assigned to each vis file.
    default: []
    example: session=['session_1', 'session_2']

pipelinemode -- The pipeline operating mode. In 'automatic' mode the pipeline
    determines the values of all context defined pipeline inputs
    automatically. In 'interactive' mode the user can set the pipeline
    context defined parameters manually. In 'getinputs' mode the user
    can check the settings of all pipeline parameters without running
    the task.
    default: 'automatic'.

---- pipeline context defined parameter argument which can be set only in
'interactive mode'

asis -- ASDM tables to convert as is
    default: 'Antenna Station Receiver CalAtmosphere'
    example: 'Receiver', ''

process_caldevice -- Ingest the ASDM caldevice table
    default: False
    example: True

overwrite -- Overwrite existing MSs on output.
    default: False

nocopy -- When importing an MS, disable copying of the MS to the working
          directory
    default: False

bdfflags -- Apply BDF flags on import
   default: True

ocorr_mode -- Read in cross- and auto-correlation data(ca), cross-
   correlation data only (co), or autocorrelation data only (ao).
   default: ca

lazy -- Use the lazy import option
    default: False

createmms -- Create a multi-MeasurementSet ('true') ready for parallel
    processing, or a standard MeasurementSet ('false'). The default setting
    ('automatic') creates an MMS if running in a cluster environment.
    default: automatic

--- pipeline task execution modes

dryrun -- Run the commands (True) or generate the commands to be run but
    do not execute (False).
    default: True

acceptresults -- Add the results of the task to the pipeline context (True) or
   reject them (False).
   default: True

Output:

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
   the results object for the pipeline task is returned.


Examples

1. Load an ASDM list in the ../rawdata subdirectory into the context"

   h_importdata(vis=['../rawdata/uid___A002_X30a93d_X43e',
                     '../rawdata/uid_A002_x30a93d_X44e'])

2. Load an MS in the current directory into the context:

   h_importdata(vis=[uid___A002_X30a93d_X43e.ms])

3. Load a tarred ASDM in ../rawdata into the context:

   h_importdata(vis=['../rawdata/uid___A002_X30a93d_X43e.tar.gz'])

4. Check the h_importdata inputs, then import the data:

   myvislist = ['uid___A002_X30a93d_X43e.ms', 'uid_A002_x30a93d_X44e.ms']
   h_importdata(vis=myvislist, pipelinemode='getinputs')
   h_importdata(vis=myvislist)

5. Load an ASDM but check the results before accepting them into the context.
   results = h_importdata(vis=['uid___A002_X30a93d_X43e.ms'],
                          acceptresults=False)
   results.accept()

6. Run in dryrun mode before running for real
    results = h_importdata(vis=['uid___A002_X30a93d_X43e.ms'], dryrun=True)
    results = h_importdata(vis=['uid___A002_X30a93d_X43e.ms'])
        </example>
    </task>
</casaxml>
