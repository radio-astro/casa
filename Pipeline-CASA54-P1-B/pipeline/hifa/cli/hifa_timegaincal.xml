<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
file:///opt/casa/code/xmlcasa/xml/casa.xsd">

<task type="function" name="hifa_timegaincal" category="pipeline">
<shortdescription>Determine temporal gains from calibrator observations</shortdescription>
<description>
The time dependent complex gains for each antenna/spwid are determined
from the raw data (DATA column) divided by the model (MODEL column), for the
specified fields.  The gains are computed independently for each specified
spectral window. One gain solution is computed for the calibrator source
targets and one for the science targets.

Previous calibrations are applied on the fly.

</description>
<input>
    <param type="stringArray" name="vis" subparam="true">
	<description>List of input MeasurementSets</description>
	<value></value>
   </param>

   <param type="stringArray" name="calamptable" subparam="true">
	<description>List of diagnostic output amplitude caltables for calibrator targets</description>
	<value type="string"></value>
   </param>

   <param type="stringArray" name="offsetstable" subparam="true">
	<description>List of diagnostic output phase offset caltables for calibrator targets</description>
	<value type="string"></value>
   </param>

   <param type="stringArray" name="calphasetable" subparam="true">
	<description>List of output phase caltables for calibrator targets</description>
	<value type="string"></value>
   </param>

   <param type="stringArray" name="targetphasetable" subparam="true">
	<description>List of output phase caltables for science targets</description>
	<value type="string"></value>
   </param>

   <param type="stringArray" name="amptable" subparam="true">
	<description>List of output amp caltables for science targets</description>
	<value type="string"></value>
   </param>

   <param type="string" name="field" subparam="true">
	<description>Set of data selection field names or ids</description>
	<value></value>
   </param>

   <param type="string" name="intent" subparam="true">
	<description>Set of data selection observing intents</description>
	<value></value>
   </param>

   <param type="string" name="spw" subparam="true">
	<description>Set of data selection spectral window/channels</description>
	<value></value>
   </param>

   <param type="string" name="antenna" subparam="true">
	<description>Set of data selection antenna ids</description>
	<value></value>
   </param>

    <param type="any" name="calsolint">
        <description>Phase solution interval for calibrator sources</description>
	<any type="variant"/>
	<value type="string">int</value>
    </param>

    <param type="any" name="targetsolint">
        <description>Phase solution interval for science target sources</description>
	<any type="variant"/>
	<value type="string">inf</value>
    </param>

    <param type="string" name="combine">
	<description>Data axes which to combine for solve (scan, spw, and/or field)</description>
	<value type="string"></value>
    </param>

    <param type="string" name="refant" subparam="true">
	<description>Reference antenna names</description>
	<value></value>
    </param>

    <param type="bool" name="solnorm" subparam="true">
	<description>Normalize average solution amplitudes to 1.0</description>
	<value>False</value>
    </param>

    <param type="int" name="minblperant">
	<description>Minimum baselines per antenna required for solve</description>
	<value>4</value>
    </param>

    <param type="double" name="calminsnr">
	<description>Reject solutions below this SNR for calibrator solutions</description>
	<value>2.0</value>
    </param>

    <param type="double" name="targetminsnr">
	<description>Reject solutions below this SNR for science solutions</description>
	<value>3.0</value>
    </param>

    <param type="doubleArray" name="smodel" subparam="true">
	<description>Point source Stokes parameters for source model</description>
	<value></value>
    </param>

    <param type="string" name="pipelinemode">
	<description>The pipeline operating mode</description>
	<value>automatic</value>
	<allowed kind="enum">
	    <value>automatic</value>
	    <value>interactive</value>
	    <value>getinputs</value>
	</allowed>
    </param>

    <param type="bool" name="dryrun" subparam="true">
	<description>Run task (False) or display the command(True)</description>
	<value type="bool">False</value>
    </param>

    <param type="bool" name="acceptresults" subparam="true">
	<description>Automatically accept results into the context</description>
	<value type="bool">True</value>
    </param>

    <constraints>
        <when param="pipelinemode">
	    <equals type="string" value="automatic" />
	    <equals type="string" value="interactive">
	        <default param="vis"><value type="stringArray"></value></default>
	        <default param="calamptable"><value type="stringArray"></value></default>
	        <default param="offsetstable"><value type="stringArray"></value></default>
	        <default param="calphasetable"><value type="stringArray"></value></default>
	        <default param="targetphasetable"><value type="stringArray"></value></default>
	        <default param="amptable"><value type="stringArray"></value></default>
	        <default param="field"><value type="string"></value></default>
	        <default param="intent"><value type="string"></value></default>
	        <default param="spw"><value type="string"></value></default>
	        <default param="antenna"><value type="string"></value></default>
	        <default param="smodel"><value type="doubleArray"></value></default>
	        <default param="solnorm"><value type="bool">False</value></default>
	        <default param="refant"><value type="string"></value></default>
	        <default param="dryrun"><value type="bool">False</value></default>
	        <default param="acceptresults"><value type="bool">True</value></default>
	    </equals>
	    <equals type="string" value="getinputs">
	        <default param="vis"><value type="stringArray"></value></default>
	        <default param="calamptable"><value type="stringArray"></value></default>
	        <default param="offsetstable"><value type="stringArray"></value></default>
	        <default param="calphasetable"><value type="stringArray"></value></default>
	        <default param="targetphasetable"><value type="stringArray"></value></default>
	        <default param="amptable"><value type="stringArray"></value></default>
	        <default param="field"><value type="string"></value></default>
	        <default param="intent"><value type="string"></value></default>
	        <default param="spw"><value type="string"></value></default>
	        <default param="antenna"><value type="string"></value></default>
	        <default param="smodel"><value type="doubleArray"></value></default>
	        <default param="solnorm"><value type="bool">False</value></default>
	        <default param="refant"><value type="string"></value></default>
	    </equals>
        </when>
    </constraints>
</input>

<output>
    <param type="any" name="results">
        <description>The output results object</description>
        <any type="variant"/>
        <value></value>
    </param>
</output>
<returns type="void"/>

<example>

Compute the gain solutions.

---- pipeline parameter arguments which can be set in any pipeline mode

pipelinemode -- The pipeline operating mode. In 'automatic' mode the pipeline
       determines the values of all context defined pipeline inputs
       automatically.  In interactive mode the user can set the pipeline
       context defined parameters manually.  In 'getinputs' mode the user
       can check the settings of all pipeline parameters without running
       the task.
       default: 'automatic'.

calsolint --  Time solution interval in CASA syntax for calibrator source solutions. 
    default: 'int'
    example: 'inf', 'int', '100sec'

targetsolint --  Time solution interval in CASA syntax for target source solutions. 
    default: 'inf'
    example: 'inf', 'int', '100sec'

combine -- Data axes to combine for solving. Options are  '','scan','spw',field'
    or any comma-separated combination.
    default; ''
    example: combine=''

minblperant -- Minimum number of baselines required per antenna for each solve
    Antennas with fewer baselines are excluded from solutions.
    default: 4
    example: minblperant=2

calminsnr -- Solutions below this SNR are rejected for calibrator solutions. 
    default: 2.0

targetminsnr -- Solutions below this SNR are rejected for science target solutions. 
    default: 3.0

---- pipeline context defined parameter arguments which can be set only in
'interactive mode'

vis -- The list of input MeasurementSets. Defaults to the list of MeasurementSets
    specified in the pipeline context
    default: ''
    example: ['M82A.ms', 'M82B.ms'] 

calamptable -- The list of output diagnostic calibration amplitude tables for the
    calibration targets.
    Defaults to the standard pipeline naming convention.
    default: ''
    example: ['M82.gacal', 'M82B.gacal']

offsetstable -- The list of output diagnostic phase offset tables for the
    calibration targets.
    Defaults to the standard pipeline naming convention.
    default: ''
    example: ['M82.offsets.gacal', 'M82B.offsets.gacal']

calphasetable -- The list of output calibration phase tables for the
    calibration targets.
    Defaults to the standard pipeline naming convention.
    default: ''
    example: ['M82.gcal', 'M82B.gcal']

amptable -- The list of output calibration amplitude tables for the
    calibration and science targets.
    Defaults to the standard pipeline naming convention.
    default: ''
    example: ['M82.gcal', 'M82B.gcal']

targetphasetable -- The list of output phase calibration tables for the science targets.
    Defaults to the standard pipeline naming convention.
    default: ''
    example: ['M82.gcal', 'M82B.gcal']

field -- The list of field names or field ids for which gain solutions are
    to be computed. Defaults to all fields with the standard intent.
    default: '' 
    example: '3C279', '3C279, M82'

intent -- A string containing a comma delimited list of intents against
    which the the selected fields are matched. Defaults to the
    equivalent of 'AMPLITUDE,PHASE,BANDPASS'.
    default: '' 
    example: '', 'PHASE'

spw -- The list of spectral windows and channels for which gain solutions are
    computed. Defaults to all science spectral windows.
    default: '' 
    example: '3C279', '3C279, M82'

smodel -- Point source Stokes parameters for source model (experimental)
    Defaults to using standard MODEL_DATA column data.
    default: [] 
    example: [1,0,0,0] (I=1, unpolarized)

refant -- Reference antenna name(s) in priority order. Defaults to most recent
    values set in the pipeline context.  If no reference antenna is defined in
    the pipeline context use the CASA defaults.
    default: '' 
    example: refant='DV01', refant='DV05,DV07'

solnorm -- Normalise the gain solutions
    default: False

--- pipeline task execution modes
dryrun -- Run the commands (True) or generate the commands to be run but
   do not execute (False).
   default: False

acceptresults -- Add the results of the task to the pipeline context (True) or
   reject them (False).
   default: True

Output:

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
    the results object for the pipeline task is returned

Description

The complex gains  are derived from the data column (raw data) divided
by the model column (usually set with hif_setjy). The gains are obtained for 
the specified solution intervals, spw combination and field combination.
One gain solution is computed for the science targets and one for
the calibrator targets.

Good candidate reference antennas can be determined using the hif_refant
task.

Previous calibrations that have been stored in the pipeline context are
applied on the fly. Users can interact with these calibrations via the
hif_export_calstate and hif_import_calstate tasks.

Issues


Examples

1. Compute standard per scan gain solutions that will be used to calibrate
the target.

    hifa_timegaincal()


</example> 

</task>
</casaxml>
