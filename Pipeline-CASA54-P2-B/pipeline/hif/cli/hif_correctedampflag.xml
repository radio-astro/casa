<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
file:///opt/casa/code/xmlcasa/xml/casa.xsd">

<task type="function" name="hif_correctedampflag" category="pipeline">

<shortdescription>Flag corrected - model amplitudes based on calibrators.</shortdescription>

<description>
Flag corrected - model amplitudes based on calibrators.
</description>

<input>
    <param type="stringArray" name="vis" subparam="true">
        <description>List of input MeasurementSets</description>
        <value></value>
    </param>

    <param type="string" name="intent" subparam="true">
        <description>Data intent to use in selecting data to evaluate for flagging</description>
        <value></value>
    </param>

    <param type="string" name="field" subparam="true">
        <description>Field ids to use in selecting data to evaluate for flagging</description>
        <value></value>
    </param>

    <param type="string" name="spw" subparam="true">
        <description>Spectral windows to use in selecting data to evaluate for flagging, \'\' for all</description>
        <value></value>
    </param>

    <param type="double" name="antnegsig" subparam="true">
        <description>Lower sigma threshold for identifying outliers as a result of bad antennas within individual timestamps</description>
        <value>4.0</value>
    </param>

    <param type="double" name="antpossig" subparam="true">
        <description>Upper sigma threshold for identifying outliers as a result of bad antennas within individual timestamps</description>
        <value>4.6</value>
    </param>

    <param type="double" name="tmantint" subparam="true">
        <description>Threshold for maximum fraction of timestamps that are allowed to contain outliers</description>
        <value>0.063</value>
    </param>

    <param type="double" name="tmint" subparam="true">
        <description>Initial threshold for maximum fraction of "outlier timestamps" over "total timestamps" that a baseline may be a part of</description>
        <value>0.085</value>
    </param>

    <param type="double" name="tmbl" subparam="true">
        <description>Initial threshold for maximum fraction of "bad baselines" over "all timestamps" that an antenna may be a part of</description>
        <value>0.175</value>
    </param>

    <param type="double" name="antblnegsig" subparam="true">
        <description>Lower sigma threshold for identifying outliers as a result of "bad baselines" and/or "bad antennas" within baselines (across all timestamps)</description>
        <value>3.4</value>
    </param>

    <param type="double" name="antblpossig" subparam="true">
        <description>Upper sigma threshold for identifying outliers as a result of "bad baselines" and/or "bad antennas" within baselines (across all timestamps)</description>
        <value>3.2</value>
    </param>

    <param type="double" name="relaxed_factor" subparam="true">
        <description>Relaxed value to set the threshold scaling factor to under certain conditions (see task description)</description>
        <value>2.0</value>
    </param>

    <param type="int" name="niter" subparam="true">
        <description>Maximum number of times to iterate on evaluation of flagging heuristics.</description>
        <value>2</value>
    </param>

    <param type="string" name="pipelinemode">
        <description>The pipeline operations mode</description>
        <value>automatic</value>
        <allowed kind="enum">
            <value>automatic</value>
            <value>interactive</value>
            <value>getinputs</value>
        </allowed>
    </param>

    <param type="bool" name="dryrun" subparam="true">
        <description>Run the task (False) or list commands (True)</description>
       <value>False</value>
    </param>

    <param type="bool" name="acceptresults" subparam="true">
        <description>Automatically apply results to context</description>
        <value>True</value>
    </param>

    <constraints>
        <when param="pipelinemode">
            <equals type="string" value="automatic" />
            <equals type="string" value="interactive">
                <default param="vis"><value type="stringArray"></value></default>
                <default param="intent"><value type="string"></value></default>
                <default param="field"><value type="string"></value></default>
                <default param="spw"><value type="string"></value></default>
                <default param="antnegsig"><value type="double">4.0</value></default>
                <default param="antpossig"><value type="double">4.6</value></default>
                <default param="tmantint"><value type="double">0.063</value></default>
                <default param="tmint"><value type="double">0.085</value></default>
                <default param="tmbl"><value type="double">0.175</value></default>
                <default param="antblnegsig"><value type="double">3.4</value></default>
                <default param="antblpossig"><value type="double">3.2</value></default>
                <default param="relaxed_factor"><value type="double">2.0</value></default>
                <default param="niter"><value type="int">2</value></default>
                <default param="dryrun"><value type="bool">False</value></default>
                <default param="acceptresults"><value type="bool">True</value></default>
            </equals>
            <equals type="string" value="getinputs">
                <default param="vis"><value type="stringArray"></value></default>
            </equals>
        </when>
    </constraints>
</input>

<output>
    <param type="any" name="results">
        <description>The output results object</description>
        <any type="variant"/>
        <value></value>
    </param>
</output>

<example>
Keyword arguments

--- pipeline parameter arguments which can be set in any pipeline mode

pipelinemode -- The pipeline operating mode. In 'automatic' mode the pipeline
    determines the values of all context defined pipeline inputs automatically.
    In interactive mode the user can set the pipeline context defined
    parameters manually. In 'getinputs' mode the user can check the settings of
    all pipeline parameters without running the task.

    default: 'automatic'.

---- pipeline context defined parameter arguments which can be set only in
'interactive mode'

vis -- The list of input MeasurementSets. Defaults to the list of
    MeasurementSets specified in the pipeline context.

    default: ''
    example: vis=['M51.ms']

field -- The list of field names or field ids for which bandpasses are
    computed. If undefined (default), it will select all fields.

    default: ''
    example: field='3C279', '3C279, M82'

intent -- A string containing a comma delimited list of intents against
    which the selected fields are matched. If undefined (default), it
    will select all data with the BANDPASS intent.

    default: ''
    example: intent='*PHASE*'

spw -- The list of spectral windows and channels for which bandpasses are
    computed. If undefined (default), it will select all science spectral
    windows.

    default: ''
    example: spw='11,13,15,17'

antnegsig -- Lower sigma threshold for identifying outliers as a result of bad
    antennas within individual timestamps.

    default: 4.0

antpossig -- Upper sigma threshold for identifying outliers as a result of bad
    antennas within individual timestamps.

    default: 4.6

tmantint -- Threshold for maximum fraction of timestamps that are allowed to
    contain outliers.

    default: 0.063

tmint -- Initial threshold for maximum fraction of "outlier timestamps" over
    "total timestamps" that a baseline may be a part of.

    default: 0.085

tmbl -- Initial threshold for maximum fraction of "bad baselines" over "all
    timestamps" that an antenna may be a part of.

    default: 0.175

antblnegsig -- Lower sigma threshold for identifying outliers as a result of
    "bad baselines" and/or "bad antennas" within baselines, across all
    timestamps.

    default: 3.4

antblpossig -- Upper sigma threshold for identifying outliers as a result of
    "bad baselines" and/or "bad antennas" within baselines, across all
    timestamps.

    default: 3.2

relaxed_factor -- Relaxed value to set the threshold scaling factor to under
    certain conditions (see task description).

    default: 2.0

niter -- Maximum number of times to iterate on evaluation of flagging
    heuristics. If an iteration results in no new flags, then subsequent
    iterations are skipped.

    default: 2

--- pipeline task execution modes

dryrun -- Run the commands (True) or generate the commands to be run but
    do not execute (False).

    default: False

acceptresults -- Add the results of the task to the pipeline context (True) or
    reject them (False).

    default: True


Output

results -- If pipeline mode is 'getinputs' then None is returned. Otherwise
    the results object for the pipeline task is returned.


Examples

1. Run default flagging on bandpass calibrator with recommended settings:

    hif_correctedampflag()
</example>
</task>
</casaxml>
